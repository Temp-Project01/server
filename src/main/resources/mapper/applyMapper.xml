<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.app.temp.mapper.ApplyMapper">
    <select id="selectApplyListDtoByMemberId" resultType="applyListDTO">
        SELECT PC.PROGRAM_NAME, PC.COMPANY_NAME, A.CREATED_DATE, A.APPLY_MEMBER_STATUS, A.MEMBER_ID
        FROM TBL_APPLY A
                 JOIN
             (
                 SELECT P.PROGRAM_NAME, C.COMPANY_NAME, P.ID FROM TBL_PROGRAM P
                                                                      JOIN TBL_COMPANY C
                                                                           ON C.ID = P.COMPANY_ID
             ) PC
             ON PC.ID = A.PROGRAM_ID

        WHERE A.MEMBER_ID = #{id}
    </select>

    <select id="selectCompanyProgramDTOByCompanyId" resultType="companyProgramDTO">
        SELECT ID, PROGRAM_NAME, CREATED_DATE, (CEIL(TO_DATE(PROGRAM_END_DATE)-SYSDATE)) PROGRAM_END_DATE, PROGRAM_EXPIRED
        FROM TBL_PROGRAM
        WHERE COMPANY_ID = #{companyId}
    </select>

    <select id="countByCompanyId" resultType="_int">
        SELECT COUNT(*)
        FROM TBL_PROGRAM
        WHERE COMPANY_ID = #{companyId}
    </select>

    <!--프로그램 전체 목록(관리자 전용)-->
    <select id="selectAll" resultType="programListDTO">
        SELECT ID, COMPANY_NAME, PROGRAM_NAME, TO_CHAR(CREATED_DATE, 'YYYY-MM-DD') AS CREATED_DATE , TO_CHAR(PROGRAM_END_DATE, 'YYYY-MM-DD') AS PROGRAM_END_DATE, PROGRAM_STATUS,
        PROGRAM_THUMBNAIL_PATH, COMPANY_INTRODUCE, PROGRAM_BENEFIT, PROGRAM_DETAIL
        FROM
        (
        SELECT ID, ROWNUM R, COMPANY_NAME, PROGRAM_NAME, CREATED_DATE, PROGRAM_END_DATE,
        PROGRAM_STATUS, PROGRAM_THUMBNAIL_PATH, COMPANY_INTRODUCE, PROGRAM_BENEFIT,
        PROGRAM_DETAIL
        FROM
        (
        SELECT P.ID, COMPANY_NAME, PROGRAM_NAME, P.CREATED_DATE, PROGRAM_END_DATE, P.PROGRAM_STATUS, P.PROGRAM_THUMBNAIL_PATH,
        C.COMPANY_INTRODUCE, PROGRAM_BENEFIT, PROGRAM_DETAIL
        FROM TBL_PROGRAM P
        JOIN TBL_COMPANY C
        ON P.COMPANY_ID = C.ID

        <if test="status != 'all' and status != null">
            AND P.PROGRAM_STATUS = #{status}
        </if>
        <if test="keyword != null">
            AND PROGRAM_NAME LIKE '%' || #{keyword} || '%'
        </if>
        <if test="date != 0 and date != 1">
            AND CEIL(SYSDATE - TO_DATE(P.CREATED_DATE)) <![CDATA[ <= #{date}]]>
        </if>
        ORDER BY P.ID DESC
        )
        <![CDATA[
        WHERE ROWNUM <= ${endRow}
        ]]>
        )
        <![CDATA[
        WHERE R >= ${startRow}
        ]]>
    </select>

    <select id="selectProgramInfoDTOById" resultType="programListDTO">
        SELECT P.ID, C.COMPANY_NAME, P.PROGRAM_NAME, P.CREATED_DATE, P.PROGRAM_END_DATE, P.PROGRAM_STATUS, P.PROGRAM_DETAIL, P.PROGRAM_PRICE, P.PROGRAM_BENEFIT, P.PROGRAM_THUMBNAIL_PATH, C.COMPANY_INTRODUCE
        FROM TBL_PROGRAM P
                 JOIN TBL_COMPANY C
                      ON P.COMPANY_ID = C.ID
        WHERE P.ID = #{id}
    </select>
    <!-- 공고 상세보기 -->
    <select id="selectAllProgramInfoDTO" resultType="programInfoDTO">
        SELECT P.ID, C.COMPANY_NAME, P.PROGRAM_NAME, TO_CHAR(P.CREATED_DATE, 'YYYY-MM-DD') AS CREATED_DATE, TO_CHAR(P.PROGRAM_END_DATE, 'YYYY-MM-DD') AS PROGRAM_END_DATE, P.PROGRAM_STATUS, P.PROGRAM_DETAIL, P.PROGRAM_PRICE, P.PROGRAM_BENEFIT, P.PROGRAM_THUMBNAIL_PATH
        FROM TBL_PROGRAM P
                 JOIN TBL_COMPANY C
                      ON P.COMPANY_ID = C.ID
    </select>

    <update id="update">
        UPDATE TBL_PROGRAM
        SET PROGRAM_STATUS = #{programStatus}
        WHERE ID = #{id}
    </update>

    <!-- 이 위는 모두 관리자용 기능. -->
<!--메인 화면에서 띄울 인기 목록-->
<!--    POST_READ_COUNT 필요 -->
<select id="selectByTopReadCount" resultType="mainProgramListDTO">
SELECT ROWNUM, ID, PROGRAM_NAME, COMPANY_NAME, CEIL(TO_DATE(PROGRAM_END_DATE)-SYSDATE) AS DDAY, PROGRAM_READ_COUNT, COMPANY_ID
FROM
    (
    SELECT P.ID, PROGRAM_NAME, COMPANY_NAME, PROGRAM_END_DATE, PROGRAM_READ_COUNT, P.COMPANY_ID
           FROM TBL_PROGRAM P
            JOIN TBL_COMPANY C
                ON P.COMPANY_ID = C.ID
                ORDER BY PROGRAM_READ_COUNT DESC
           )
WHERE ROWNUM  <![CDATA[ <=12 ]]>

</select>

    <!--    프로그램 검색 + 필터도 추가해야됨-->
<!--   상단 검색바 키워드 검색-->
    <select id="searchProgramsByKeyword" resultType="mainProgramListDTO">
        SELECT P.ID, PROGRAM_NAME, PROGRAM_DETAIL, PROGRAM_EXPIRED, PROGRAM_STATUS, CEIL(TO_DATE(PROGRAM_END_DATE)-SYSDATE) AS DDAY, PROGRAM_PRICE, PROGRAM_BENEFIT, PROGRAM_THUMBNAIL_PATH, COMPANY_ID, CATEGORY_C_ID, P.CREATED_DATE, P.UPDATED_DATE,
               C.ID, COMPANY_NAME, COMPANY_BUSINESS_NUMBER, COMPANY_ESTABLISHMENT, COMPANY_EMPLOYEE, COMPANY_MAIN_ADDRESS, COMPANY_LOGO_PATH, COMPANY_CEO, COMPANY_URL, COMPANY_CERTIFICATE_PATH, COMPANY_INTRODUCE, COMPANY_WELFARE, COMPANY_CULTURE, COMPANY_SUB_ADDRESS
        FROM TBL_PROGRAM P
                 JOIN TBL_COMPANY C
                      ON P.COMPANY_ID = C.ID

        WHERE P.PROGRAM_DETAIL LIKE '%' || #{keyword} || '%'
           OR P.PROGRAM_NAME LIKE '%' || #{keyword} || '%'
           OR C.COMPANY_NAME LIKE '%' || #{keyword} || '%'
           OR C.COMPANY_WELFARE LIKE '%' || #{keyword} || '%'
    </select>

    <!-- 일반회원용 프로그램 전체 목록 조회 -->
    <!-- 일반회원용 프로그램 전체 목록 조회 + 카테고리 클릭마다 추가해서 필터 적용-->
<!--  로그인/비로그인 모두 전체 목록은 여기서 조회  -->
<!--    서비스단에서 로그인 유무에 따라 정보 추가-->
<!--    카테고리는 여기서 추가하고, 카테고리가 null 이면 전체 반환-->
<!--    카테고리가 있으면, 해당 카테고리만 select 해서 출력-->
<!--    여기서는 memberID 안 받아도 되고, 서비스에서 이용-->
    <select id="selectAllMain" resultType="mainProgramListDTO">
        SELECT P.ID, C.COMPANY_NAME, P.PROGRAM_NAME, P.PROGRAM_END_DATE, P.PROGRAM_THUMBNAIL_PATH, P.CATEGORY_C_ID, CEIL(TO_DATE(PROGRAM_END_DATE)-SYSDATE) DDAY
        FROM TBL_PROGRAM P
        JOIN TBL_COMPANY C ON P.COMPANY_ID = C.ID
        JOIN TBL_CATEGORY_C CC ON CC.ID = P.CATEGORY_C_ID
        JOIN TBL_CATEGORY_B CB ON CC.CATEGORY_B_ID = CB.ID
        JOIN TBL_CATEGORY_A CA ON CB.CATEGORY_A_ID = CA.ID
<!--                                WHERE-->
<!--                                    <if test="categories != null">-->
<!--                                        P.CATEGORY_C_ID IN (-->
<!--                                        <trim suffixOverrides=",">-->
<!--                                            <foreach item="category" collection="categories">-->
<!--                                                #{category},-->
<!--                                            </foreach>-->
<!--                                        </trim>-->
<!--                                        )-->
<!--                                    </if>-->
        ORDER BY P.ID DESC
    </select>
<!-- 카테고리 추가해서 검색-->
    <select id="selectAllByCategories" resultType="mainProgramListDTO">
        SELECT P.ID, C.COMPANY_NAME, P.PROGRAM_NAME, P.PROGRAM_END_DATE, P.PROGRAM_THUMBNAIL_PATH, P.CATEGORY_C_ID, CEIL(TO_DATE(PROGRAM_END_DATE)-SYSDATE) DDAY, CA.ID AS CATEGORY_A_ID, C.ID AS COMPANY_ID
        FROM TBL_PROGRAM P
        JOIN TBL_COMPANY C ON P.COMPANY_ID = C.ID
        JOIN TBL_CATEGORY_C CC ON CC.ID = P.CATEGORY_C_ID
        JOIN TBL_CATEGORY_B CB ON CC.CATEGORY_B_ID = CB.ID
        JOIN TBL_CATEGORY_A CA ON CB.CATEGORY_A_ID = CA.ID
                                        WHERE P.ID IS NOT NULL
                                            <if test="categories != null">
                                                AND CA.ID IN (
                                                <trim suffixOverrides=",">
                                                    <foreach item="category" collection="categories">
                                                            #{category},
                                                    </foreach>
                                                </trim>
                                                )
                                            </if>
                                            <if test="keyword != null">
                                            AND (P.PROGRAM_DETAIL LIKE '%' || #{keyword} || '%'
                                            OR P.PROGRAM_NAME LIKE '%' || #{keyword} || '%'
                                            OR C.COMPANY_NAME LIKE '%' || #{keyword} || '%'
                                            OR C.COMPANY_WELFARE LIKE '%' || #{keyword} || '%')
                                            </if>
                                            ORDER BY P.ID DESC
    </select>


    <!--카테고리로 프로그램 검색-->
    <select id="selectAllByCategoryCId" resultType="mainProgramListDTO">
        SELECT P.ID, C.COMPANY_NAME, P.PROGRAM_NAME, P.PROGRAM_END_DATE, P.PROGRAM_THUMBNAIL_PATH, P.CATEGORY_C_ID
        FROM TBL_PROGRAM P
                 JOIN TBL_COMPANY C
                      ON P.COMPANY_ID = C.ID
                 JOIN TBL_CATEGORY_C CC
                      ON P.CATEGORY_C_ID = CC.ID
        WHERE P.CATEGORY_C_ID = #{categoryCId}
    </select>
    <!-- 프로그램 내용 조회 (/program/detail) -->
    <select id="selectMainProgramInfoDTOById" resultType="mainProgramInfoDTO">
        SELECT P.ID, P.PROGRAM_NAME, P.CREATED_DATE, TO_CHAR(P.PROGRAM_END_DATE, 'YYYY-MM') PROGRAM_END_DATE, CC.CATEGORY_C_NAME,
               P.PROGRAM_DETAIL, P.PROGRAM_PRICE, P.PROGRAM_BENEFIT, TO_CHAR(C.COMPANY_ESTABLISHMENT, 'YYYY') YEAR, TO_CHAR(C.COMPANY_ESTABLISHMENT, 'MM') MONTH,
               CEIL((SYSDATE-TO_DATE(COMPANY_ESTABLISHMENT))/365) DURATION, C.COMPANY_NAME, P.CATEGORY_C_ID, C.COMPANY_ESTABLISHMENT, C.COMPANY_MAIN_ADDRESS, C.COMPANY_SUB_ADDRESS,
               C.COMPANY_LOGO_PATH, C.COMPANY_WELFARE, C.COMPANY_CULTURE, C.COMPANY_INTRODUCE, C.COMPANY_URL, P.COMPANY_ID
        FROM TBL_PROGRAM P
                 JOIN TBL_COMPANY C
                      ON P.COMPANY_ID = C.ID
                 JOIN TBL_CATEGORY_C CC
                      ON P.CATEGORY_C_ID = CC.ID
        WHERE P.ID = #{id}
    </select>

    <insert id="insert">
        INSERT INTO TBL_APPLY(ID, MEMBER_ID, PROGRAM_ID, RESUME_ID)
        VALUES (SEQ_APPLY.NEXTVAL, #{memberId}, #{programId}, #{resumeId})
    </insert>

    <!--    pagination/total-->
    <select id="countAll" resultType="_int">
        SELECT COUNT(*) AS TOTAL
        FROM
        (
        SELECT P.ID, COMPANY_NAME, PROGRAM_NAME, P.CREATED_DATE, PROGRAM_END_DATE, P.PROGRAM_STATUS
        FROM TBL_PROGRAM P
        JOIN TBL_COMPANY C
        ON P.COMPANY_ID = C.ID

        <if test="status != 'all' and status != null">
            AND P.PROGRAM_STATUS = #{status}
        </if>
        <if test="keyword != null">
            AND PROGRAM_NAME LIKE '%' || #{keyword} || '%'
        </if>
        <if test="date != 0 and date != 1">
            AND CEIL(SYSDATE - TO_DATE(P.CREATED_DATE)) <![CDATA[ <= #{date}]]>
        </if>

        )
    </select>
<!--    마이페이지 지원한 리스트 -->
    <select id="selectApplicationById" resultType="applyDTO">
    SELECT ID, PROGRAM_NAME, PROGRAM_END_DATE, COMPANY_NAME, APPLY_MEMBER_STATUS, PROGRAM_PRICE
    FROM
        (
            SELECT ID, ROWNUM R, PROGRAM_NAME, PROGRAM_END_DATE, COMPANY_NAME, APPLY_MEMBER_STATUS, PROGRAM_PRICE
            FROM
                (
                    SELECT P.ID, P.PROGRAM_NAME,
                           CEIL(PROGRAM_END_DATE - SYSDATE) AS PROGRAM_END_DATE,
                           C.COMPANY_NAME,
                           A.APPLY_MEMBER_STATUS,
                            P.PROGRAM_PRICE
                    FROM TBL_COMPANY C
                    JOIN TBL_PROGRAM P
                    ON C.ID = P.COMPANY_ID
                    JOIN TBL_APPLY A
                    ON A.PROGRAM_ID = P.ID
                    AND
                    A.MEMBER_ID = #{id} AND
                    A.APPLY_MEMBER_STATUS = #{applyMemberStatus}
                    ORDER BY A.ID DESC
                )
            <![CDATA[
            WHERE ROWNUM <= #{pagination.endRow}
                ]]>
        )
     <![CDATA[
    WHERE R >= #{pagination.startRow}
    ]]>
    </select>

    <select id="selectApplicationCount" resultType="_int">
        SELECT COUNT(*)
        FROM TBL_MEMBER M JOIN TBL_APPLY A
        ON M.ID = A.MEMBER_ID AND A.MEMBER_ID = #{id}
    </select>
    <select id="selectApplicationMemberStatus" resultType="applyDTO">
        SELECT APPLY_MEMBER_STATUS
        FROM TBL_APPLY
        WHERE MEMBER_ID = #{id}
    </select>

    <update id="updateReadCount">
        UPDATE TBL_PROGRAM
        SET PROGRAM_READ_COUNT = PROGRAM_READ_COUNT + 1
        WHERE ID = #{id}
    </update>


</mapper>